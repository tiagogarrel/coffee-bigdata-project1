{"timestamp":"2025-05-14T10:07:44.082917","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T10:07:44.084741","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/prediccion_ventas_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T10:07:44.996961Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:44.997863Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:44.998724Z","level":"info","event":"Current task name:generar_clima_futuro","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:44.999515Z","level":"info","event":"Dag name:prediccion_ventas_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:45.899276","level":"info","event":"âœ… Future weather generated and saved to DB.","logger":"root"}
{"timestamp":"2025-05-14T10:07:45.901520","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-14T10:07:45.982242Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:45.983002Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-14T10:07:45.983583Z","level":"info","event":"Task operator:<Task(PythonOperator): generar_clima_futuro>","chan":"stdout","logger":"task"}
